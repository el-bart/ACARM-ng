installation
============

this document describes, step by step, how to install ACARM-ng starting with
sources and finishing with running environment.


compilation from sources
========================

after obtaining sources from http://www.acarm.wcss.wroc.pl extract them:
$ tar xjvf aacrmng.tar.bz2

enter sources directory:
$ cd acarmng/daemon

and run compilation:
$ make PROFILE=release

if make exited with no errors system compiler successfully.  note that
build process used to build ACARM-ng ensures valid dependencies and so
'make' can be run in paraller (-jN where N is number of CPUs in the system).


compiling without some features
===============================

there is an option of compilation without certain features, like some of the
triggers, inputs, filters or persistnecy types.

TODO: describe how to do this (note: script making this easire would be nice)


running automatic tests
=======================

this step is optional, but strongly recommended. by running automated tests
you can quickly check if there are any problems with system-environment
cooperation.

extract and enter sources directory (see 'compilation from sources' section
for details) and build tests:
$ make PROFILE=test

run all tests with following script:
$ ./run_all_tests

you should see output from test applications for all compiled components. if
something fails you'll get more verbose output.

notice that before you'll configure data base, you'll get errors from given
persistency engines about non-existing data bases, etc... see 'preparing
environment' section for more details on setting up data base and
CONFIGURATION.txt for details on setting up data base in config file.


data base
=========

currently only PostgreSQL is supported, though persistency mechanism is generic
and any engine (also non-data-base - as long as transactions are supported) can
be implemented.
there are just a few steps required to prepare data base server to run with
ACARM-ng.

PostgreSQL
----------
 1. create 'acarm_ng' data base on the server.
 2. create valid data base schema for this data base:
    $ cd acarmng/data_model
    $ ./init_db

note: if you want to run tests create 'acarm_ng_test' data base and use
      'init_test_db' script to fill it with data.

preparing environment
=====================

next step it to prepare runtime environment for application. application will
NOT allow to be run as 'root' (for obvious, security reasons). therefore you
must create dedicated user to run system as. let us assume user's name is
'acarm-ng' and he belongs to 'acarm-ng' group:
$ groupadd acarm-ng
$ useradd -g acarm-ng -m acarm-ng


files placement
===============

now /home/acarm-ng directory should exist. copy all required files there
(assume /tmp/acarmng is your source directory, with compiled binaries):
$ cd /home/acarm-ng
$ cp -rL /tmp/acarmng/daemon/gen/release_local_normal_default/libs .
$ cp /tmp/acarmng/daemon/gen/release_local_normal_default/acarmng/acarmng.out acarmng

now create configuration file, according to your needs and place in the same
directory as a binary (in our example this is /home/acarm-ng), under the name
'acarm_ng_config.xml'. see CONFIGURATION.txt for details on syntax and possible
options.


running
=======

assuming you have everything configuread as described above, switch to
'acarm-ng' user and in the home directory run:
$ LD_LIBRARY_PATH="$HOME/libs" ./acarmng

system is now up and running! depending no how you configred logger, you can
search in proper outputs (ex. file) logged messages to se what's up at the
moment. feel free to run acarm-ng in background with nohup/screen/etc...


troubleshooting
===============
Q: system does not compile.
A: check if you have latest version of sources. check if you have all required
   prerequisites installed (list in REQUIREMENTS.txt) in proper versions. if
   everything fails, contact system authors (see project's home page).

Q: source compiles with warnings.
A: send us report from compilation along with you environment details (compiler
   type and version, libraries versions, configuration.

Q: i've spotted runtime error not described anywhere - i think it's a bug.
A: compile ACARM-ng in debug profile and check again - logging is much more
   verbose then and extra assertions are present in the code. to do this run:
   $ make PROFILE=debug

Q: when running i get error about missing *.so objects.
A: you don't have LD_LIBRARY_PATH set correctly - ACARM-ng uses libraries that
   are essential to run application (/home/acarm-ng/libs in previous examples).

Q: i have problems with configuration file's syntax.
A: here is minimal, valid configuration. note: its useless for production,
   since it does nothing (except for logging to file), but can be easily
   expanded, step by step, to help find what your problem is. file:
     <?xml version="1.0" encoding="UTF-8"?>
     <acarm_ng>

       <persistency>
         <type>stubs</type>
       </persistency>

       <logger>
         <appenders>
           <File name="default">
             <output>loggerfile.log</output>
           </File>
         </appenders>

         <nodes appender="default" threshold="debug">
         </nodes>
       </logger>

       <preprocessor/>

       <filters/>

       <triggers/>

       <inputs>
         <someinput/>
       </inputs>

     </acarm_ng>
