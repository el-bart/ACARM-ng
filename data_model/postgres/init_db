#!/bin/bash

# check syntax
if [ "$#" -ne "3" ]
then
  echo "$0 <dbname> <daemon_passwd_file> <ui_passwd_file>" >&2
  exit 1
fi

DB="$1"
PASSF_DMN="$2"
PASSF_UI="$3"

#
# drop current content
#

MKDB="`mktemp`"
# script creating data base
echo "DROP   DATABASE \"$DB\";" >> "$MKDB"
echo "CREATE DATABASE \"$DB\";" >> "$MKDB"
psql -w -f "$MKDB" || exit $?
rm "$MKDB"

#
# fill with new data
#

# create users
MKUSERS="`mktemp`"
# script creating accounts, giving them ability to connect
echo "CREATE LANGUAGE plpgsql;"                                        >> "$MKUSERS"
echo "CREATE USER \"acarm-ng-daemon\" PASSWORD '$(cat "$PASSF_DMN")';" >> "$MKUSERS"
echo "CREATE USER \"acarm-ng-ui\"     PASSWORD '$(cat "$PASSF_UI")';"  >> "$MKUSERS"
echo "GRANT CONNECT ON DATABASE \"$DB\" to \"acarm-ng-daemon\";"       >> "$MKUSERS"
echo "GRANT CONNECT ON DATABASE \"$DB\" to \"acarm-ng-ui\";"           >> "$MKUSERS"
psql -w -d "$DB" -f $MKUSERS || exit $?
rm "$MKUSERS"

# create new content
# note: 'ls' is needed here to preserve proper order of execution
for s in `ls [^0]*.sql`
do
  psql -w -d "$DB" -f $s || exit $?
done

exit 0
