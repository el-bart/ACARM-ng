#!/bin/bash

# check syntax
if [ "$#" -ne "3" ]
then
  echo "$0 <dbname> <daemon_passwd_file> <ui_passwd_file>" >&2
  exit 1
fi

DB="$1"
PASSF_UI="$2"
PASSF_DMN="$3"

# ensure porper user
if ! psql -d "$DB" -w -c '\q' > /dev/null 2>&1
then
  echo "$0: cannot access data base $DB as $USER" >&2
  exit 2
fi

# drop current content
# note: 'ls' is needed here to preserve proper order of execution
for s in `ls 0*.sql`
do
  psql -w -d "$DB" -f $s > /dev/null 2>&1
done

# create users
MKUSERS="`mktemp`"
# create accounts creation script
echo "CREATE USER \"acarm-ng-daemon\" PASSWORD '$(cat "$PASSF_DMN")';" >> "$MKUSERS"
echo "CREATE USER \"acarm-ng-ui\"     PASSWORD '$(cat "$PASSF_UI")';"  >> "$MKUSERS"
echo "GRANT CONNECT ON DATABASE \"$DB\" to \"acarm-ng-daemon\";"       >> "$MKUSERS"
echo "GRANT CONNECT ON DATABASE \"$DB\" to \"acarm-ng-ui\";"           >> "$MKUSERS"
psql -w -d "$DB" -f $MKUSERS || exit $?
rm "$MKUSERS"

# create new content
# note: 'ls' is needed here to preserve proper order of execution
for s in `ls [^0]*.sql`
do
  psql -w -d "$DB" -f $s || exit $?
done

exit 0
