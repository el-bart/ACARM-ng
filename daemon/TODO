2 rereading configuration from file (note: not all configuration may change at runtime).
8 refactor ConfigIO - it should read configuration file and keep it in memory. proper handlers for specific parts of configuration file should be implemented by interested components.
9 think what can be done about libprelude's GPL license (others are commercial) - move it to separate process or buy LGPG/BSD?
11 think how to overcome lack of additional data assigned for observed graph nodes in filters during normal run - they will not be present after reading from persistency.
15 update Persistency::Postgres::Restorer to use set<> internally instead of vector and so remove duplicates on-the-fly, then copy response to output vector.
17 GraphNode (MetaAlert?) should have some unique identifier in the system, that can be reported.
26 create XML schema for config file.
27 add parse-at-read feature to configio - config should be accepted or rejected when running application, not delayed until acctuall usage (note: this task is connected with config's refactoring to register parsers).
30 trigger for ICQ or jabber messages.
31 remplace queues from input to queues with limited number of entries, to quench inputs from flooding with data faster, than it can be processed.
32 add names to inputs, so that multiple instances of the same input types are possible.
36 fix multiple typos: dbhandleR -> dbhandle
37 add extra check while running ACARM-ng, if last run finished successfully or not (ex.: via DynamicConfig entry, changed uppon normal exit).
38 consider running persistency cleanup in a separate thread - it takes a lot of time... it could be also run in background onec a day by system, to ensure quick starting of acarm.
39 consider some sort of mchanism to prevent crashes when connection lives shorter than transaction (ex.: keeping connection in transaction?).
40 fix TODOs in QueueRestorer - structure is broken now...
41 consider adding 'descrioption' to meta-alert to reflect extra correlation pieces of information (like details on what bases these alerts have been correlated).
42 messages buffering in triggers should have some size limit (not to crash applicaiton when destination sertvice is permanently down).
46 if filters' prerequisites are not enought consider adding userd-defined rules in config file as well.
47 fix message buffering issue in triggers - when messages are buffered, they are not marked as already triggered, thus the same report may arrive multiple times (making queue unique should solve this issue).
48 fix bug in ipblacklist - it have to remember which alerts have been alrady correlated - otherwise it adds +1.3 up to infinity and alerts get some weird severities like 212314, etc...
49 fix logger to continue logging to file after disk space is out and then freed again.
50 move connection with gg server to separate thread (keep connection alive all the time, since reconnecting does not always work - server has flood-protection).
51
