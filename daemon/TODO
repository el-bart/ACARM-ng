2 rereading configuration from file (note: not all configuration may change at runtime).
8 refactor ConfigIO - it should read configuration file and keep it in memory. proper handlers for specific parts of configuration file should be implemented by interested components.
9 think what can be done about libprelude's GPL license (others are commercial) - move it to separate process or buy LGPG/BSD?
11 think how to overcome lack of additional data assigned for observed graph nodes in filters during normal run - they will not be present after reading from persistency.
15 update Persistency::Postgres::Restorer to use set<> internally instead of vector and so remove duplicates on-the-fly, then copy response to output vector.
17 GraphNode (MetaAlert?) should have some unique identifier in the system, that can be reported.
25 add messages buffering before doing actuall send in triggers - this will prevent message lost, when server is temporary not available; note: buffering can be done at least in memory; buffering shall be done on trigger's API level.
26 create XML schema for config file.
27 add parse-at-read feature to configio - config should be accepted or rejected when running application, not delayed until acctuall usage (note: this task is connected with config's refactoring to register parsers).
29 add timestamps to triggered reports (to know when it has been triggered).
30 trigger for ICQ or jabber messages.
31 remplace queues from input to queues with limited number of entries, to quench inputs from flooding with data faster, than it can be processed.
32 add names to inputs, so that multiple instances of the same input types are possible.
33 think about adding prerequisites for filters, so that some filters would get meta alerts only generated by specified filters.
34
