<?xml version="1.0" encoding="utf-8" ?>
<sqlMapConfig>

  <cacheModel id="querycache" implementation="LRU" >
    <flushInterval hours="1"/>
    <property name="CacheSize" value="100"/>
  </cacheModel>


  <!-- Queries for single items -->

  <select id="SelectReportedHost" resultClass="CReportedHostEntry" parameterClass="int">
    SELECT r.id AS id, r.role AS role, h.ip AS ip, h.mask AS mask, h.os AS os, h.name AS name, u.name as ref_name, u.url AS ref_url FROM ( reported_hosts as r LEFT JOIN hosts as h ON r.id_host=h.id ) LEFT JOIN reference_urls as u ON r.id_ref=u.id WHERE r.id=#value#
  </select>

  <select id="SelectReportedService" resultClass="CReportedServiceEntry" parameterClass="int">
    SELECT s.id AS id, s.name AS name, s.port AS port, s.protocol AS protocol, u.name AS ref_name, u.url AS ref_url FROM ( reported_services AS r LEFT JOIN services AS s ON r.id_service=s.id ) LEFT JOIN reference_urls AS u ON r.id_ref=u.id WHERE s.id=#value# ORDER BY name
  </select>

  <select id="SelectReportedProcess" resultClass="CReportedProcessEntry" parameterClass="int">
    SELECT r.id AS id, p.name AS name, p.path AS path, p.md5 AS md5, r.pid AS pid, r.uid AS uid, r.username AS username, r.arguments AS arguments, u.name AS ref_name, u.url AS ref_url FROM ( reported_procs AS r LEFT JOIN procs AS p ON r.id_proc=p.id ) LEFT JOIN reference_urls AS u ON r.id_ref=u.id WHERE r.id=#value# ORDER BY name
  </select>

  <select id="SelectAlertAnalyzers" resultClass="CLinkPair" parameterClass="int">
    SELECT aa.id_analyzer AS id, an.name AS name FROM alert_analyzers AS aa LEFT JOIN analyzers AS an ON aa.id_analyzer=an.id WHERE aa.id_alert=#value#
  </select>

  <select id="SelectAlertSourceHosts" resultClass="CLinkPair" parameterClass="int">
    SELECT r.id AS id, h.ip AS name FROM reported_hosts AS r LEFT JOIN hosts AS h ON r.id_host=h.id WHERE r.id_alert=#value# AND r.role='src' ORDER BY name
  </select>

  <select id="SelectAlertDestinationHosts" resultClass="CLinkPair" parameterClass="int">
    SELECT r.id AS id, h.ip AS name FROM reported_hosts AS r LEFT JOIN hosts AS h ON r.id_host=h.id WHERE r.id_alert=#value# AND r.role='dst' ORDER BY name
  </select>

  <select id="SelectReportedHostsProcesses" resultClass="CLinkPair" parameterClass="int">
    SELECT r.id AS id, p.name AS name FROM reported_procs AS r LEFT JOIN procs as p ON r.id_proc=p.id WHERE r.id_reported_host=#value# ORDER BY name
  </select>

  <select id="SelectReportedHostsServices" resultClass="CLinkPair" parameterClass="int">
    SELECT r.id_service AS id, s.name AS name FROM reported_services AS r LEFT JOIN services as s ON r.id_service=s.id WHERE r.id_reported_host=#value# ORDER BY name
  </select>

  <select id="SelectAlert" resultClass="CAlertEntry" parameterClass="int">
    SELECT name, detect_time AS detect, create_time AS create, description, certainty, severity FROM alerts WHERE id=#VALUE#;
  </select>

  <select id="SelectHost" resultClass="CReportedHostEntry" parameterClass="int">
    SELECT h.id, h.role, h.ip, h.mask, h.os, h.name, r.name as ref_name, r.url as ref_url FROM hosts AS h LEFT JOIN reference_urls AS r ON h.id_ref=r.id WHERE h.id=#value#
  </select>

  <select id="SelectMetaAlertID" resultClass="CMetaAlertEntry" parameterClass="int">
    SELECT ma.id AS id, ma.name AS name, ma.create_time AS create_time, ma.last_update_time AS last_update_time, ma.severity_delta AS severity_delta, ma.certainty_delta AS certainty_delta, m.id_alert AS id_alert 
      FROM meta_alerts AS ma LEFT JOIN alert_to_meta_alert_map AS m ON m.id_meta_alert=ma.id 
      WHERE id=#value#
  </select>

  <select id="SelectMetaAlertSysID" resultClass="CMetaAlertEntry" parameterClass="int">
    SELECT ma.id AS id, ma.name AS name, ma.create_time AS create_time, ma.last_update_time AS last_update_time, ma.severity_delta AS severity_delta, ma.certainty_delta AS certainty_delta, m.id_alert AS id_alert 
      FROM meta_alerts AS ma LEFT JOIN alert_to_meta_alert_map AS m ON m.id_meta_alert=ma.id 
      WHERE ma.sys_id=#value#
  </select>

  <select id="SelectAnalyzer" resultClass="CAnalyzerListEntry" parameterClass="int">
    SELECT * FROM analyzers WHERE id=#value#
  </select>

  <select id="MapSysIDtoDatabaseID" resultClass="int" parameterClass="int">
    SELECT id FROM meta_alerts WHERE sys_id=#value#
  </select>

  <select id="SelectMetaAlertsChildren" resultClass="CLinkTriple" parameterClass="int">
    SELECT ma.id as metaalertid, ma.name as name, g.id_alert as alertid FROM meta_alerts AS ma RIGHT JOIN meta_alerts_tree AS t ON ma.id=t.id_child LEFT JOIN alert_to_meta_alert_map as g ON g.id_meta_alert=ma.id WHERE t.id_node=#value#
  </select>

  <select id="SelectAlertForMetaAlert" resultClass="CLinkTriple" parameterClass="int">
    SELECT name as name,id as alertid FROM alert_to_meta_alert_map as map JOIN alerts as a ON a.id=map.id_alert WHERE map.id_meta_alert=#value#
  </select>

  <!-- Queries for tables' sizes -->

  <select id="SelectUsersCount" resultClass="int">
    SELECT count(*) FROM wui_users
  </select>

  <select id="SelectAnalyzersCount" resultClass="int">
    SELECT count(*) FROM analyzers
  </select>

  <select id="SelectWUILogsCount" resultClass="int">
    SELECT count(*) FROM logs
  </select>

  <select id="SelectAlertsSummaryCount" resultClass="int">
    SELECT count(*) FROM alerts
  </select>

  <select id="SelectAlertsSummaryRangeCount" resultClass="int" parameterClass="CParamRange">
    <![CDATA[
         SELECT count(*) FROM alerts
            JOIN hosts as h1 on h1.id_alert=alerts.id
            JOIN hosts as h2 on h2.id_alert=alerts.id
          WHERE create_time<=#date_to#  AND create_time>=#date_from#
            AND (h1.ip=#src# OR 1=#ignoresrc#) AND h1.role='src'
            AND (h2.ip=#dst# OR 1=#ignoredst#) AND h2.role='dst'
            AND ((severity='4' AND #severities# LIKE '%high%')
              OR (severity='3' AND #severities# LIKE '%medium%')         
              OR (severity='2' AND #severities# LIKE '%low%')
              OR (severity='1' AND #severities# LIKE '%info%')
              OR (severity='0' AND #severities# LIKE '%debug%'));
    ]]>
  </select>

  <select id="SelectMetaAlertsSummaryCount" resultClass="int">
    SELECT count(*) FROM meta_alerts
  </select>

  <select id="SelectMetaAlertsRootsCount" resultClass="int">
    SELECT count(*) FROM meta_alerts WHERE id NOT IN ( SELECT id_child FROM meta_alerts_tree ) ORDER BY create_time DESC limit #limit# offset #offset# <!--unsure-->
  </select>

  <!-- Queries for statistics -->
  <select id="SMetaAlertsInUse" resultClass="int">
    SELECT count(*) FROM meta_alerts_in_use;
  </select>

  <select id="SAlertCount" resultClass="int">
    SELECT count(*) FROM alerts;
  </select>

  <select id="SMetaAlertCount" resultClass="int">
    SELECT count(*) FROM meta_alerts;
  </select>

  <!-- Queries for lists of items -->

  <select id="SelectUsers" resultClass="CUserRecord" parameterClass="CParamLimitOffset">
    SELECT * FROM wui_users ORDER BY login ASC limit #limit# offset #offset#
  </select>

  <select id="SelectAnalyzers" resultClass="CAnalyzerListEntry" parameterClass="CParamLimitOffset">
    SELECT * FROM analyzers ORDER BY name,ip ASC limit #limit# offset #offset#
  </select>

  <select id="SelectAnalyzersForAlert" resultClass="CAnalyzerListEntry" parameterClass="int">
    SELECT id, name, ip, version, os FROM alert_analyzers JOIN analyzers ON alert_analyzers.id_analyzer=analyzers.id WHERE alert_analyzers.id_alert=#VALUE#
  </select>

  <select id="SelectHostsForAlert" resultClass="CReportedHostEntry" parameterClass="int">
    SELECT hosts.name,ip,role,os,hosts.id FROM alerts JOIN hosts ON hosts.id_alert=alerts.id WHERE alerts.id=#VALUE#
  </select>

  <select id="SelectServicesForHost" resultClass="CReportedServiceEntry" parameterClass="int">
    SELECT name, port, protocol, id_ref as ref_name FROM services WHERE id_host=#VALUE#
  </select>

  <select id="SelectProcessesForHost" resultClass="CReportedProcessEntry" parameterClass="int">
    select name, path, md5, pid, uid, username, arguments, id_ref as ref_name, arguments from procs where id_host=#VALUE#
  </select>

  <select id="SelectWUILogs" resultClass="CLogEntry" parameterClass="CParamLimitOffset">
    SELECT u.id AS id, u.login AS login, l.ctime AS ctime, l.msg AS msg FROM logs AS l LEFT JOIN wui_users AS u ON l.id_wui_user=u.id ORDER BY ctime DESC limit #limit# offset #offset#
  </select>

  <select id="SelectAlertsSummaryRange" resultClass="CAlertListEntry" parameterClass="CParamRange">
    <![CDATA[
         SELECT alerts.id, alerts.name, create_time, severity FROM alerts
            JOIN hosts as h1 on h1.id_alert=alerts.id
            JOIN hosts as h2 on h2.id_alert=alerts.id
          WHERE create_time<=#date_to#  AND create_time>=#date_from#
            AND (h1.ip=#src# OR 1=#ignoresrc#) AND h1.role='src'
            AND (h2.ip=#dst# OR 1=#ignoredst#) AND h2.role='dst'
            AND ((severity='4' AND #severities# LIKE '%high%')
              OR (severity='3' AND #severities# LIKE '%medium%')
              OR (severity='2' AND #severities# LIKE '%low%')
              OR (severity='1' AND #severities# LIKE '%info%')
              OR (severity='0' AND #severities# LIKE '%debug%'))
            ORDER BY alerts.create_time DESC
            LIMIT #limit#
            OFFSET #offset#
    ]]>
  </select>

  <select id="SelectMetaAlertsSummary" resultClass="CMetaAlertSummaryEntry" parameterClass="CParamLimitOffset">
    SELECT id, name, create_time FROM meta_alerts ORDER BY create_time DESC limit #limit# offset #offset#
  </select>

  <select id="SelectMetaAlertRoots" resultClass="CMetaAlertSummaryEntry" parameterClass="CParamLimitOffset">
    SELECT id, name, create_time FROM meta_alerts WHERE id NOT IN ( SELECT id_child FROM meta_alerts_tree ) ORDER BY create_time DESC limit #limit# offset #offset#
  </select>

<!-- Queries for Data Mining -->

  <select id="DMSeveritiesIP" resultClass="CDMPair" parameterClass="CParamRange"  cacheModel="querycache">
    <![CDATA[
    SELECT severity as key,count(*) as value FROM alerts
         JOIN hosts as h1 ON alerts.id=h1.id_alert AND h1.role='src'
         JOIN hosts as h2 ON alerts.id=h2.id_alert AND h2.role='dst'
         WHERE (h1.ip=#src# OR 1=#ignoresrc#) AND (h2.ip=#dst# OR 1=#ignoredst#)
           AND create_time<=#date_to# AND create_time>=#date_from#
           AND ((severity=4 AND #severities# LIKE '%high%')
             OR (severity=3 AND #severities# LIKE '%medium%')
             OR (severity=2 AND #severities# LIKE '%low%') 
             OR (severity=1 AND #severities# LIKE '%info%')  
             OR (severity=0 AND #severities# LIKE '%debug%')) GROUP BY (severity);
    ]]>
  </select>

<!-- The same query but with removed two joins for the sake of performance -->
  <select id="DMSeverities" resultClass="CDMPair" parameterClass="CParamRange"  cacheModel="querycache">
    <![CDATA[
    SELECT severity as key,count(*) as value FROM alerts WHERE create_time<=#date_to# AND create_time>=#date_from#
        AND ((severity=4 AND #severities# LIKE '%high%')
         OR (severity=3 AND #severities# LIKE '%medium%')
         OR (severity=2 AND #severities# LIKE '%low%')
         OR (severity=1 AND #severities# LIKE '%info%')
         OR (severity=0 AND #severities# LIKE '%debug%'))
    GROUP BY (severity);
    ]]>
  </select>


  <select id="DMAlertCountTimeSeries" resultClass="CDMPair" parameterClass="CParamRange"  cacheModel="querycache">
    <![CDATA[
    SELECT key,value FROM 
      (SELECT date_trunc('day', create_time) AS key FROM
        alerts WHERE create_time>=#date_from# AND create_time<=#date_to# GROUP BY key) AS a
        LEFT JOIN (SELECT date_trunc('day', create_time) AS date2, count(*) AS value FROM
        alerts WHERE (severity=4 AND #severities#='high')
                  OR (severity=3 AND #severities#='medium')
                  OR (severity=2 AND #severities#='low')
                  OR (severity=1 AND #severities#='info')
                  OR (severity=0 AND #severities#='debug') GROUP BY date2) AS b ON a.key=b.date2 ORDER BY key;
    ]]>
  </select>

  <select id="DMAlertTypes" resultClass="CDMPair" parameterClass="CParamRange"  cacheModel="querycache">
    <![CDATA[
    SELECT name AS key,count(name) AS value FROM Alerts WHERE create_time<=#date_to# AND create_time>=#date_from# GROUP BY name ORDER BY count(name) DESC;
    ]]>
  </select>

  <select id="DMMetaAlertCountTimeSeries" resultClass="CDMPair" parameterClass="CParamRange"  cacheModel="querycache">
    <![CDATA[
    SELECT date_trunc('day', create_time) AS key ,count(*) AS value FROM meta_alerts WHERE create_time<=#date_to# AND create_time>=#date_from# AND severity_delta>=0 GROUP BY key ORDER BY key;
    ]]>
  </select>

  <!-- HeatMap Query -->
  <select id="DMHeatMapRange" resultClass="CDMHeatMap" parameterClass="CDMPair"  cacheModel="querycache">
    <![CDATA[
       select a.ip as source, b.ip as destination, count(*) as count from hosts as a JOIN hosts as b ON a.id_alert=b.id_alert where a.role='src' AND b.role='dst' AND a.id_alert>#key# AND a.id_alert<#value# group by a.ip, b.ip;
     ]]>
  </select>

  <select id="DMHeatMapHostcount" resultClass="CDMPair" parameterClass="CDMPair" cacheModel="querycache">
    <![CDATA[
    SELECT min(id) AS key,max(id) AS value FROM alerts WHERE create_time<=#value# AND create_time>=#key#;
     ]]>
  </select>

  <select id="DMHeatMapNumAlerts" resultClass="int" parameterClass="CDMQuadruple" cacheModel="querycache">
    <![CDATA[
       select count(*) as count from hosts as a JOIN hosts as b ON a.id_alert=b.id_alert where a.role='src' AND b.role='dst' AND a.id_alert>#value1# AND a.id_alert<#value2# AND a.ip=#value3# AND b.ip=#value4#;
     ]]>
  </select>

</sqlMapConfig>
